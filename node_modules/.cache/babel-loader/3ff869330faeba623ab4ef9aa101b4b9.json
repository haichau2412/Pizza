{"ast":null,"code":"import config from '../config/environments';\nconst {\n  API_HOST\n} = config;\n\nconst handleResponse = async response => {\n  try {\n    const result = await response.json();\n\n    if (!response.ok) {\n      if (response.status === 401) {// auto logout if 401 response returned from api\n      }\n\n      const error = result.errorMessage || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return { ...result\n    };\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport const authUser = async ({\n  values,\n  type\n}) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...values\n    })\n  };\n  let response;\n\n  if (type === 'signup') {\n    response = await fetch(`${API_HOST}/registration`, requestOptions);\n  }\n\n  if (type === 'login') {\n    response = await fetch(`${API_HOST}/login`, requestOptions);\n  }\n\n  const data = await handleResponse(response);\n  return data;\n};\nexport const checkout = async ({\n  address,\n  cart,\n  token\n}) => {\n  console.log('In checkout');\n  console.log({\n    cart\n  });\n  const keys = Object.keys(cart);\n  const formattedCart = keys.map((producID, index) => {\n    return {\n      producID,\n      quantity: cart[producID].quantity\n    };\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: JSON.stringify({\n      address,\n      cart: formattedCart\n    })\n  };\n  const response = await fetch(`${API_HOST}/orders`, requestOptions);\n  console.log(response);\n  const data = await handleResponse(response);\n  console.log(data);\n  return data;\n}; // export const signin = async (info) => {\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ ...info })\n//     }\n//     const response = await fetch(`${API_HOST}/signin`, requestOptions);\n//     const data = await handleResponse(response);\n//     return data;\n// }\n\nexport default {\n  authUser,\n  handleResponse,\n  checkout\n};","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/service/UserServices.js"],"names":["config","API_HOST","handleResponse","response","result","json","ok","status","error","errorMessage","statusText","Promise","reject","authUser","values","type","requestOptions","method","headers","body","JSON","stringify","fetch","data","checkout","address","cart","token","console","log","keys","Object","formattedCart","map","producID","index","quantity"],"mappings":"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","sourcesContent":["import config from '../config/environments';\n\nconst { API_HOST } = config;\n\nconst handleResponse = async (response) => {\n\n    try {\n        const result = await response.json();\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n\n            }\n            const error = (result.errorMessage) || response.statusText;\n            return Promise.reject(error);\n        }\n        return { ...result };\n    }\n    catch (error) {\n        return { error };\n    }\n\n}\n\nexport const authUser = async ({ values, type }) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...values })\n    }\n    let response;\n    if (type === 'signup') {\n        response = await fetch(`${API_HOST}/registration`, requestOptions);\n    }\n    if (type === 'login') {\n        response = await fetch(`${API_HOST}/login`, requestOptions);\n    }\n\n    const data = await handleResponse(response);\n\n    return data;\n}\n\nexport const checkout = async ({ address, cart, token }) => {\n    console.log('In checkout');\n    console.log({ cart });\n\n    const keys = Object.keys(cart);\n    const formattedCart = keys.map((producID, index) => {\n        return {\n            producID,\n            quantity: cart[producID].quantity\n        }\n    })\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        },\n        body: JSON.stringify({ address, cart: formattedCart })\n    }\n\n    const response = await fetch(`${API_HOST}/orders`, requestOptions);\n    console.log(response);\n    const data = await handleResponse(response);\n\n    console.log(data);\n\n    return data;\n}\n\n// export const signin = async (info) => {\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ ...info })\n//     }\n\n//     const response = await fetch(`${API_HOST}/signin`, requestOptions);\n//     const data = await handleResponse(response);\n\n//     return data;\n// }\n\n\n\nexport default {\n    authUser,\n    handleResponse,\n    checkout,\n\n}"]},"metadata":{},"sourceType":"module"}