{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { API_HOST } from '../../config/environments';\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n  confirmedPassword: ''\n};\n\nconst onSubmit = (values, {\n  setSubmitting,\n  resetForm\n}) => {\n  setSubmitting(true);\n\n  const handleSubmit = async () => {\n    try {\n      const resp = await fetch(`${API_HOST}/registration`, {\n        method: 'POST',\n        body: JSON.stringify({ ...values\n        })\n      });\n      console.log(resp);\n      const result = await resp.json();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleSubmit();\n  setSubmitting(false);\n};\n\nconst validate = values => {\n  const errors = {};\n  const {\n    username,\n    password,\n    email,\n    confirmedPassword\n  } = values;\n\n  if (!email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!username) {\n    errors.username = 'Required';\n  }\n\n  if (!password) {\n    errors.password = 'Required';\n  }\n\n  if (!confirmedPassword) {\n    errors.password = 'Required';\n  }\n\n  return errors;\n};\n\nconst SignUp = () => {\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password,\n    email,\n    confirmedPassword\n  } = values;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 44\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 44\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"confirmedPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"confirmedPassword\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"confirmedPassword\",\n    id: \"confirmedPassword\",\n    name: \"confirmedPassword\",\n    onChange: handleChange,\n    value: confirmedPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }), errors.confirmedPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 53\n    }\n  }, errors.confirmedPassword) : null), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, JSON.stringify(values, null, 2)))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js"],"names":["React","useFormik","FormTitle","InputField","Label","Input","Button","FormContainer","Wrapper","API_HOST","initialValues","username","password","email","confirmedPassword","onSubmit","values","setSubmitting","resetForm","handleSubmit","resp","fetch","method","body","JSON","stringify","console","log","result","json","error","validate","errors","test","SignUp","formik","handleChange","handleBlur","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    useFormik\n} from 'formik';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { API_HOST } from '../../config/environments';\nconst initialValues = {\n    username: '',\n    password: '',\n    email: '',\n    confirmedPassword: ''\n};\n\nconst onSubmit = (values, { setSubmitting, resetForm }) => {\n\n    setSubmitting(true);\n    const handleSubmit = async () => {\n        try {\n            const resp = await fetch(\n                `${API_HOST}/registration`,\n                {\n                    method: 'POST',\n                    body: JSON.stringify({ ...values })\n                }\n            )\n            console.log(resp);\n            const result = await resp.json();\n            console.log(result);\n\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n    }\n    handleSubmit();\n    setSubmitting(false);\n};\n\nconst validate = (values) => {\n    const errors = {};\n    const { username, password, email, confirmedPassword } = values;\n    if (!email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!username) {\n        errors.username = 'Required';\n    }\n\n    if (!password) {\n        errors.password = 'Required';\n    }\n\n    if (!confirmedPassword) {\n        errors.password = 'Required';\n    }\n    return errors;\n\n}\n\nconst SignUp = () => {\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validate\n    })\n\n    const { errors, values, handleChange, handleSubmit, handleBlur, isSubmitting } = formik;\n    const { username, password, email, confirmedPassword } = values;\n\n    return (\n        <Wrapper>\n            <FormContainer onSubmit={handleSubmit}>\n                <FormTitle>Sign Up</FormTitle>\n                <form action=\"#\">\n                    <InputField>\n                        <Label htmlFor=\"username\">Username</Label>\n                        <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                        {errors.username ? <div>{errors.username}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"email\" id=\"email\" name=\"email\" onChange={handleChange} value={email} />\n                        {errors.email ? <div>{errors.email}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"password\">Password</Label>\n                        <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                        {errors.password ? <div>{errors.password}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"confirmedPassword\">confirmedPassword</Label>\n                        <Input type=\"confirmedPassword\" id=\"confirmedPassword\" name=\"confirmedPassword\" onChange={handleChange} value={confirmedPassword} />\n                        {errors.confirmedPassword ? <div>{errors.confirmedPassword}</div> : null}\n                    </InputField>\n                    <Button disabled={isSubmitting} type=\"submit\">Sign up</Button>\n                    <pre>{JSON.stringify(values, null, 2)}</pre>\n                </form>\n            </FormContainer>\n\n        </Wrapper >\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}