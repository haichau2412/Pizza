{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/user/SignIn.js\";\nimport React from 'react';\nimport { FormContainer, FormTitle, InputField, Label, Input, Button, Wrapper } from './StyledAuth';\nimport { useFormik } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authUserbySignup } from '../../redux/auth/AuthSlice';\nimport { validate } from './validator';\nimport { history } from '../../service/History';\nconst initialValues = {\n  username: '',\n  password: ''\n};\n\nconst getAuthenticated = state => {\n  return state.auth.authenticated;\n};\n\nconst SignIn = () => {\n  const isAuthenticated = useSelector(getAuthenticated);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        dispatch(authUserbySignup({\n          values,\n          type: 'login'\n        }));\n      } catch (error) {}\n\n      setSubmitting(false);\n    },\n    validate\n  });\n\n  if (isAuthenticated) {\n    history.push('/home');\n  }\n\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password\n  } = values;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 44\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 44\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Sign in\"))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/user/SignIn.js"],"names":["React","FormContainer","FormTitle","InputField","Label","Input","Button","Wrapper","useFormik","useSelector","useDispatch","authUserbySignup","validate","history","initialValues","username","password","getAuthenticated","state","auth","authenticated","SignIn","isAuthenticated","dispatch","formik","onSubmit","values","setSubmitting","resetForm","type","error","push","errors","handleChange","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormContainer, FormTitle, InputField, Label, Input, Button, Wrapper } from './StyledAuth';\nimport {\n    useFormik\n} from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authUserbySignup } from '../../redux/auth/AuthSlice';\nimport { validate } from './validator';\nimport { history } from '../../service/History';\n\n\nconst initialValues = {\n    username: '',\n    password: ''\n};\n\nconst getAuthenticated = (state) => {\n    return state.auth.authenticated\n};\n\n\nconst SignIn = () => {\n\n\n    const isAuthenticated = useSelector(getAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n\n            setSubmitting(true);\n            try {\n                dispatch(authUserbySignup({ values, type: 'login' }));\n\n            }\n            catch (error) {\n\n            }\n            setSubmitting(false);\n        },\n        validate\n    })\n\n    if (isAuthenticated) {\n        history.push('/home');\n    }\n\n\n    const { errors, values, handleChange, handleSubmit, isSubmitting } = formik;\n    const { username, password } = values;\n\n    return (\n        <Wrapper>\n            <FormContainer onSubmit={handleSubmit}>\n                <FormTitle>Sign in</FormTitle>\n                <form action=\"#\">\n                    <InputField>\n                        <Label htmlFor=\"username\">Username</Label>\n                        <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                        {errors.username ? <div>{errors.username}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"password\">Password</Label>\n                        <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                        {errors.password ? <div>{errors.password}</div> : null}\n                    </InputField>\n                    <Button>Sign in</Button>\n                </form>\n            </FormContainer>\n        </Wrapper>\n    )\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}