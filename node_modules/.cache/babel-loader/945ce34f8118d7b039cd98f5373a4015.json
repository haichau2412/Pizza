{"ast":null,"code":"import { configureStore, createReducer } from '@reduxjs/toolkit';\nimport appReducer from './AppStore';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth', 'cart'],\n  //Things u want to persist\n  blacklist: [] //Things u dont\n\n};\nexport const rootReducer = createReducer(undefined, {\n  logout: (state, action) => {\n    state = undefined;\n    storage.removeItem('persist:root');\n    return appReducer(state, action);\n  },\n  default: appReducer\n}); // Middleware: Redux Persist Persisted Reducer\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk]\n});\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/redux/PersistStore.js"],"names":["configureStore","createReducer","appReducer","persistStore","persistReducer","storage","thunk","persistConfig","key","whitelist","blacklist","rootReducer","undefined","logout","state","action","removeItem","default","persistedReducer","store","reducer","middleware","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,aAAzB,QAA8C,kBAA9C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA,OAFkB;AAGlBI,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,CAHO;AAGW;AAC7BC,EAAAA,SAAS,EAAE,EAJO,CAIH;;AAJG,CAAtB;AAOA,OAAO,MAAMC,WAAW,GAAGV,aAAa,CAACW,SAAD,EAAY;AAChDC,EAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvBD,IAAAA,KAAK,GAAGF,SAAR;AACAP,IAAAA,OAAO,CAACW,UAAR,CAAmB,cAAnB;AACA,WAAOd,UAAU,CAACY,KAAD,EAAQC,MAAR,CAAjB;AACH,GAL+C;AAMhDE,EAAAA,OAAO,EAAEf;AANuC,CAAZ,CAAjC,C,CASP;;AACA,MAAMgB,gBAAgB,GAAGd,cAAc,CAACG,aAAD,EAAgBI,WAAhB,CAAvC;AAKA,OAAO,MAAMQ,KAAK,GAAGnB,cAAc,CAAC;AAChCoB,EAAAA,OAAO,EAAEF,gBADuB;AAEhCG,EAAAA,UAAU,EAAE,CAACf,KAAD;AAFoB,CAAD,CAA5B;AAKP,OAAO,MAAMgB,SAAS,GAAGnB,YAAY,CAACgB,KAAD,CAA9B;AAEP,eAAe;AACXA,EAAAA,KADW;AAEXG,EAAAA;AAFW,CAAf","sourcesContent":["import { configureStore, createReducer } from '@reduxjs/toolkit';\nimport appReducer from './AppStore';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth', 'cart'], //Things u want to persist\n    blacklist: [], //Things u dont\n};\n\nexport const rootReducer = createReducer(undefined, {\n    logout: (state, action) => {\n        state = undefined;\n        storage.removeItem('persist:root');\n        return appReducer(state, action);\n    },\n    default: appReducer\n})\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\n\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk]\n});\n\nexport const persistor = persistStore(store);\n\nexport default {\n    store,\n    persistor\n};\n\n"]},"metadata":{},"sourceType":"module"}