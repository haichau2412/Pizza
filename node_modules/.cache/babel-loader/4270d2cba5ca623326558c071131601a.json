{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/containers/header/components/DropdownMenu.js\";\nimport React from 'react';\nimport { Dropdown, DropdownItem, DropdownLogout } from './StyledHeader';\nimport { useDispatch } from 'react-redux';\nimport { rootReducer } from '../../../redux/PersistStore';\nconst routes = {\n  unauthenticated: [{\n    path: '/auth/signin',\n    content: 'Sign In'\n  }, {\n    path: '/auth/signup',\n    content: 'Sign Up'\n  }],\n  authenticated: [{\n    path: '/auth/logout',\n    content: 'Log out'\n  }]\n};\n\nconst DropdownMenu = ({\n  auth\n}) => {\n  const dispatch = useDispatch();\n  const status = auth ? 'authenticated' : 'unauthenticated';\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, auth || routes[status].map((route, index) => {\n    return /*#__PURE__*/React.createElement(DropdownItem, {\n      key: index,\n      to: route.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }\n    }, route.content);\n  }), !auth || routes[status].map((route, index) => {\n    return /*#__PURE__*/React.createElement(DropdownLogout, {\n      onClick: () => dispatch(rootReducer),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }\n    }, route.content);\n  }));\n};\n\nexport default DropdownMenu;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/containers/header/components/DropdownMenu.js"],"names":["React","Dropdown","DropdownItem","DropdownLogout","useDispatch","rootReducer","routes","unauthenticated","path","content","authenticated","DropdownMenu","auth","dispatch","status","map","route","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,QAAuD,gBAAvD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,eAAe,EAAE,CACb;AACIC,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,OAAO,EAAE;AAFb,GADa,EAKb;AACID,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,OAAO,EAAE;AAFb,GALa,CADN;AAUXC,EAAAA,aAAa,EAAE,CACX;AACIF,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,OAAO,EAAE;AAFb,GADW;AAVJ,CAAf;;AAkBA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGF,IAAI,GAAG,eAAH,GAAqB,iBAAxC;AACA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,IAAIN,MAAM,CAACQ,MAAD,CAAN,CAAeC,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1C,wBAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAnB;AAA0B,MAAA,EAAE,EAAED,KAAK,CAACR,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CQ,KAAK,CAACP,OAAjD,CAAP;AACH,GAFQ,CADb,EAIK,CAACG,IAAD,IAASN,MAAM,CAACQ,MAAD,CAAN,CAAeC,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,wBAAO,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACR,WAAD,CAAvC;AAAsD,MAAA,GAAG,EAAEY,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoED,KAAK,CAACP,OAA1E,CAAP;AACH,GAFS,CAJd,CADJ;AAUH,CAbD;;AAeA,eAAeE,YAAf","sourcesContent":["import React from 'react';\nimport { Dropdown, DropdownItem, DropdownLogout } from './StyledHeader';\nimport { useDispatch } from 'react-redux';\nimport { rootReducer } from '../../../redux/PersistStore'\n\nconst routes = {\n    unauthenticated: [\n        {\n            path: '/auth/signin',\n            content: 'Sign In',\n        },\n        {\n            path: '/auth/signup',\n            content: 'Sign Up',\n        }],\n    authenticated: [\n        {\n            path: '/auth/logout',\n            content: 'Log out',\n        }]\n}\n\n\nconst DropdownMenu = ({ auth }) => {\n    const dispatch = useDispatch();\n    const status = auth ? 'authenticated' : 'unauthenticated';\n    return (\n        <Dropdown>\n            {auth || routes[status].map((route, index) => {\n                return <DropdownItem key={index} to={route.path}>{route.content}</DropdownItem>\n            })}\n            {!auth || routes[status].map((route, index) => {\n                return <DropdownLogout onClick={() => dispatch(rootReducer)} key={index} >{route.content}</DropdownLogout>\n            })}\n        </Dropdown>\n    )\n}\n\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}