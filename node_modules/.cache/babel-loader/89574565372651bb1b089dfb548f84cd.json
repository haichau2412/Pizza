{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { authUser } from '../../redux/auth/AuthSlice';\nimport { validateSignup } from './validator';\nimport { history } from '../../service/History';\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n  confirmedPassword: ''\n};\n\nconst getMsg = state => {\n  return state.auth.msg;\n};\n\nconst SignUp = () => {\n  const message = useSelector(getMsg);\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password,\n    email,\n    confirmedPassword\n  } = values;\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        await dispatch(authUser({\n          values,\n          type: 'signup'\n        }));\n      } catch (error) {}\n\n      setSubmitting(false);\n    },\n    validate: validateSignup\n  });\n\n  if (message === 'Email sent') {\n    alert('pl');\n  } else if (message) {\n    alert(message);\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 44\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 44\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"confirmedPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"confirmedPassword\",\n    name: \"confirmedPassword\",\n    onChange: handleChange,\n    value: confirmedPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), errors.confirmedPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 53\n    }\n  }, errors.confirmedPassword) : null), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Sign up\"))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js"],"names":["React","useFormik","useSelector","useDispatch","FormTitle","InputField","Label","Input","Button","FormContainer","Wrapper","authUser","validateSignup","history","initialValues","username","password","email","confirmedPassword","getMsg","state","auth","msg","SignUp","message","errors","values","handleChange","handleSubmit","isSubmitting","formik","dispatch","onSubmit","setSubmitting","resetForm","type","error","validate","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    useFormik\n} from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { authUser } from '../../redux/auth/AuthSlice';\nimport { validateSignup } from './validator';\nimport { history } from '../../service/History';\n\nconst initialValues = {\n    username: '',\n    password: '',\n    email: '',\n    confirmedPassword: ''\n};\n\nconst getMsg = (state) => {\n    return state.auth.msg\n};\n\nconst SignUp = () => {\n\n    const message = useSelector(getMsg);\n\n\n    const { errors, values, handleChange, handleSubmit, isSubmitting } = formik;\n    const { username, password, email, confirmedPassword } = values;\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n\n            setSubmitting(true);\n            try {\n                await dispatch(authUser({ values, type: 'signup' }));\n            }\n            catch (error) {\n\n            }\n            setSubmitting(false);\n        },\n        validate: validateSignup\n    })\n\n    if (message === 'Email sent') {\n        alert('pl');\n    } else if (message) {\n        alert(message);\n    }\n\n\n\n    return (\n        <Wrapper>\n            <FormContainer onSubmit={handleSubmit}>\n                <FormTitle>Sign Up</FormTitle>\n                <form>\n                    <InputField>\n                        <Label htmlFor=\"username\">Username</Label>\n                        <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                        {errors.username ? <div>{errors.username}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"email\" id=\"email\" name=\"email\" onChange={handleChange} value={email} />\n                        {errors.email ? <div>{errors.email}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"password\">Password</Label>\n                        <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                        {errors.password ? <div>{errors.password}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"confirmedPassword\">Confirm Password</Label>\n                        <Input type=\"password\" id=\"confirmedPassword\" name=\"confirmedPassword\" onChange={handleChange} value={confirmedPassword} />\n                        {errors.confirmedPassword ? <div>{errors.confirmedPassword}</div> : null}\n                    </InputField>\n                    <Button disabled={isSubmitting} type=\"submit\">Sign up</Button>\n                </form>\n            </FormContainer>\n        </Wrapper >\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}