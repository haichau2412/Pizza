{"ast":null,"code":"import config from '../config/environments';\nconst {\n  API_HOST\n} = config;\n\nconst handleResponse = async response => {\n  try {\n    const result = await response.json();\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n      }\n\n      const error = result.errorMessage || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return {\n      token: result.token\n    };\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport const signup = async data => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...data\n    })\n  };\n  const response = await fetch(`${API_HOST}/registration`, requestOptions);\n  const token = await handleResponse(response);\n  return tooken;\n};\n\nconst logout = () => {};\n\nexport default {\n  signup,\n  handleResponse\n};","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/service/UserServices.js"],"names":["config","API_HOST","handleResponse","response","result","json","ok","status","logout","error","errorMessage","statusText","Promise","reject","token","signup","data","requestOptions","method","headers","body","JSON","stringify","fetch","tooken"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeD,MAArB;;AAEA,MAAME,cAAc,GAAG,MAAOC,QAAP,IAAoB;AAEvC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;;AACA,QAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAC,QAAAA,MAAM;AACT;;AACD,YAAMC,KAAK,GAAIL,MAAM,CAACM,YAAR,IAAyBP,QAAQ,CAACQ,UAAhD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAO;AAAEK,MAAAA,KAAK,EAAEV,MAAM,CAACU;AAAhB,KAAP;AACH,GAXD,CAYA,OAAOL,KAAP,EAAc;AACV,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACH;AAEJ,CAlBD;;AAoBA,OAAO,MAAMM,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGN;AAAL,KAAf;AAHa,GAAvB;AAMA,QAAMb,QAAQ,GAAG,MAAMoB,KAAK,CAAE,GAAEtB,QAAS,eAAb,EAA6BgB,cAA7B,CAA5B;AACA,QAAMH,KAAK,GAAG,MAAMZ,cAAc,CAACC,QAAD,CAAlC;AAEA,SAAOqB,MAAP;AACH,CAXM;;AAaP,MAAMhB,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAIA,eAAe;AACXO,EAAAA,MADW;AAEXb,EAAAA;AAFW,CAAf","sourcesContent":["import config from '../config/environments';\n\nconst { API_HOST } = config;\n\nconst handleResponse = async (response) => {\n\n    try {\n        const result = await response.json();\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n            }\n            const error = (result.errorMessage) || response.statusText;\n            return Promise.reject(error);\n        }\n        return { token: result.token };\n    }\n    catch (error) {\n        return { error };\n    }\n\n}\n\nexport const signup = async (data) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...data })\n    }\n\n    const response = await fetch(`${API_HOST}/registration`, requestOptions);\n    const token = await handleResponse(response);\n\n    return tooken;\n}\n\nconst logout = () => {\n\n}\n\nexport default {\n    signup,\n    handleResponse\n}"]},"metadata":{},"sourceType":"module"}