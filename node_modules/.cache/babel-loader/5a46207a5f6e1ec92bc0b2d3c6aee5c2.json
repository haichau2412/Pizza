{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport UserServices from '../../service/UserServices';\nexport const authUserbySignup = createAsyncThunk('auth/authUserbySignupStatus', async (info, {\n  getState,\n  requestId\n}) => {\n  const {\n    currentRequestId,\n    authenticating\n  } = getState().auth;\n\n  if (authenticating === false || requestId !== currentRequestId) {\n    return;\n  }\n\n  const data = await UserServices.signup(info);\n  return { ...data,\n    username: info.username\n  };\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    currentRequestId: '',\n    currentUser: '',\n    authenticating: false,\n    authenticated: false,\n    token: '',\n    error: ''\n  },\n  reducers: {},\n  extraReducers: {\n    [authUserbySignup.pending]: (state, action) => {\n      if (state.authenticating === false) {\n        state.authenticating = true;\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [authUserbySignup.fulfilled]: (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n      const {\n        msg,\n        username,\n        token,\n        success,\n        data\n      } = action.payload;\n\n      if (state.authenticating === true && state.currentRequestId === requestId) {\n        state.authenticating = false;\n        state.currentRequestId = undefined;\n        state.currentUser = '';\n      }\n\n      if (msg) {\n        state.currentUser = username;\n        state.error = msg;\n      } else {\n        state.currentUser = username;\n        state.authenticated = true;\n        state.token = token;\n      }\n    },\n    [authUserbySignup.rejected]: (state, action) => {\n      const {\n        requestId\n      } = action.meta;\n\n      if (state.authenticating === true && state.currentRequestId === requestId) {\n        state.authenticating = false;\n        state.currentRequestId = undefined;\n        state.currentUser = '';\n      }\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = authSlice;\nexport const {\n  request,\n  success,\n  error\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/redux/auth/AuthSlice.js"],"names":["createSlice","createAsyncThunk","UserServices","authUserbySignup","info","getState","requestId","currentRequestId","authenticating","auth","data","signup","username","authSlice","name","initialState","currentUser","authenticated","token","error","reducers","extraReducers","pending","state","action","meta","fulfilled","msg","success","payload","undefined","rejected","actions","reducer","request"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC5C,6BAD4C,EAE5C,OAAOG,IAAP,EAAa;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAb,KAAyC;AACrC,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAuCH,QAAQ,GAAGI,IAAxD;;AACA,MAAID,cAAc,KAAK,KAAnB,IAA4BF,SAAS,KAAKC,gBAA9C,EAAgE;AAC5D;AACH;;AACD,QAAMG,IAAI,GAAG,MAAMR,YAAY,CAACS,MAAb,CAAoBP,IAApB,CAAnB;AACA,SAAO,EAAE,GAAGM,IAAL;AAAWE,IAAAA,QAAQ,EAAER,IAAI,CAACQ;AAA1B,GAAP;AACH,CAT2C,CAAzC;AAYP,OAAO,MAAMC,SAAS,GAAGb,WAAW,CAAC;AACjCc,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVR,IAAAA,gBAAgB,EAAE,EADR;AAEVS,IAAAA,WAAW,EAAE,EAFH;AAGVR,IAAAA,cAAc,EAAE,KAHN;AAIVS,IAAAA,aAAa,EAAE,KAJL;AAKVC,IAAAA,KAAK,EAAE,EALG;AAMVC,IAAAA,KAAK,EAAE;AANG,GAFmB;AAUjCC,EAAAA,QAAQ,EAAE,EAVuB;AAYjCC,EAAAA,aAAa,EAAE;AACX,KAAClB,gBAAgB,CAACmB,OAAlB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,UAAID,KAAK,CAACf,cAAN,KAAyB,KAA7B,EAAoC;AAChCe,QAAAA,KAAK,CAACf,cAAN,GAAuB,IAAvB;AACAe,QAAAA,KAAK,CAAChB,gBAAN,GAAyBiB,MAAM,CAACC,IAAP,CAAYnB,SAArC;AACH;AACJ,KANU;AAOX,KAACH,gBAAgB,CAACuB,SAAlB,GAA8B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7C,YAAM;AAAElB,QAAAA;AAAF,UAAgBkB,MAAM,CAACC,IAA7B;AACA,YAAM;AAAEE,QAAAA,GAAF;AAAOf,QAAAA,QAAP;AAAiBM,QAAAA,KAAjB;AAAwBU,QAAAA,OAAxB;AAAiClB,QAAAA;AAAjC,UAA0Cc,MAAM,CAACK,OAAvD;;AACA,UAAIN,KAAK,CAACf,cAAN,KAAyB,IAAzB,IAAiCe,KAAK,CAAChB,gBAAN,KAA2BD,SAAhE,EAA2E;AACvEiB,QAAAA,KAAK,CAACf,cAAN,GAAuB,KAAvB;AACAe,QAAAA,KAAK,CAAChB,gBAAN,GAAyBuB,SAAzB;AACAP,QAAAA,KAAK,CAACP,WAAN,GAAoB,EAApB;AACH;;AACD,UAAIW,GAAJ,EAAS;AACLJ,QAAAA,KAAK,CAACP,WAAN,GAAoBJ,QAApB;AACAW,QAAAA,KAAK,CAACJ,KAAN,GAAcQ,GAAd;AACH,OAHD,MAGO;AACHJ,QAAAA,KAAK,CAACP,WAAN,GAAoBJ,QAApB;AACAW,QAAAA,KAAK,CAACN,aAAN,GAAsB,IAAtB;AACAM,QAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AACH;AACJ,KAvBU;AAwBX,KAACf,gBAAgB,CAAC4B,QAAlB,GAA6B,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC5C,YAAM;AAAElB,QAAAA;AAAF,UAAgBkB,MAAM,CAACC,IAA7B;;AACA,UAAIF,KAAK,CAACf,cAAN,KAAyB,IAAzB,IAAiCe,KAAK,CAAChB,gBAAN,KAA2BD,SAAhE,EAA2E;AACvEiB,QAAAA,KAAK,CAACf,cAAN,GAAuB,KAAvB;AACAe,QAAAA,KAAK,CAAChB,gBAAN,GAAyBuB,SAAzB;AACAP,QAAAA,KAAK,CAACP,WAAN,GAAoB,EAApB;AACH;AAEJ;AAhCU;AAZkB,CAAD,CAA7B;AAiDP,MAAM;AAAEgB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBpB,SAA7B;AAEA,OAAO,MAAM;AAAEqB,EAAAA,OAAF;AAAWN,EAAAA,OAAX;AAAoBT,EAAAA;AAApB,IAA8Ba,OAApC;AAEP,eAAeC,OAAf","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport UserServices from '../../service/UserServices';\n\nexport const authUserbySignup = createAsyncThunk(\n    'auth/authUserbySignupStatus',\n    async (info, { getState, requestId }) => {\n        const { currentRequestId, authenticating } = getState().auth;\n        if (authenticating === false || requestId !== currentRequestId) {\n            return\n        }\n        const data = await UserServices.signup(info);\n        return { ...data, username: info.username };\n    }\n)\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        currentRequestId: '',\n        currentUser: '',\n        authenticating: false,\n        authenticated: false,\n        token: '',\n        error: ''\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [authUserbySignup.pending]: (state, action) => {\n            if (state.authenticating === false) {\n                state.authenticating = true;\n                state.currentRequestId = action.meta.requestId;\n            }\n        },\n        [authUserbySignup.fulfilled]: (state, action) => {\n            const { requestId } = action.meta\n            const { msg, username, token, success, data } = action.payload;\n            if (state.authenticating === true && state.currentRequestId === requestId) {\n                state.authenticating = false\n                state.currentRequestId = undefined\n                state.currentUser = ''\n            }\n            if (msg) {\n                state.currentUser = username;\n                state.error = msg;\n            } else {\n                state.currentUser = username;\n                state.authenticated = true;\n                state.token = token;\n            }\n        },\n        [authUserbySignup.rejected]: (state, action) => {\n            const { requestId } = action.meta\n            if (state.authenticating === true && state.currentRequestId === requestId) {\n                state.authenticating = false;\n                state.currentRequestId = undefined;\n                state.currentUser = ''\n            }\n\n        }\n    }\n});\n\n\nconst { actions, reducer } = authSlice;\n\nexport const { request, success, error } = actions;\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}