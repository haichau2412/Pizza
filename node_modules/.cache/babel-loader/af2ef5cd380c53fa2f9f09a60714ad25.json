{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { authUser, resetMsg } from '../../redux/auth/AuthSlice';\nimport { validateSignup } from './validator';\nimport { history } from '../../service/History';\nimport Alert from '../sharecomponents/Alert';\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n  confirmedPassword: ''\n};\n\nconst getMsg = state => {\n  return state.auth.msg;\n};\n\nconst SignUp = () => {\n  const message = useSelector(getMsg);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n\n      try {\n        await dispatch(authUser({\n          values,\n          type: 'signup'\n        }));\n      } catch (error) {}\n\n      setSubmitting(false);\n    },\n    validate: validateSignup\n  });\n  React.useEffect(() => {\n    return () => {\n      dispatch(resetMsg());\n    };\n  }, []);\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password,\n    email,\n    confirmedPassword\n  } = values;\n  const makeAlert = React.useCallback(() => {\n    if (message === 'Email sent') {\n      alert(`Confirm email has been sent to your email, please check to verify your account and log in again`);\n      history.push('/home');\n    } else if (message) {\n      alert(message);\n    }\n  }, [message]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    alert: makeAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 48\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }), errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 45\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 48\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"confirmedPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"confirmedPassword\",\n    name: \"confirmedPassword\",\n    onChange: handleChange,\n    value: confirmedPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }), errors.confirmedPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 57\n    }\n  }, errors.confirmedPassword) : null), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Sign up\")))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js"],"names":["React","useFormik","useSelector","useDispatch","FormTitle","InputField","Label","Input","Button","FormContainer","Wrapper","authUser","resetMsg","validateSignup","history","Alert","initialValues","username","password","email","confirmedPassword","getMsg","state","auth","msg","SignUp","message","dispatch","formik","onSubmit","values","setSubmitting","type","error","validate","useEffect","errors","handleChange","handleSubmit","isSubmitting","makeAlert","useCallback","alert","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    useFormik\n} from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { authUser, resetMsg } from '../../redux/auth/AuthSlice';\nimport { validateSignup } from './validator';\nimport { history } from '../../service/History';\nimport Alert from '../sharecomponents/Alert';\n\nconst initialValues = {\n    username: '',\n    password: '',\n    email: '',\n    confirmedPassword: ''\n};\n\nconst getMsg = (state) => {\n    return state.auth.msg\n};\n\nconst SignUp = () => {\n\n    const message = useSelector(getMsg);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: async (values, { setSubmitting }) => {\n            setSubmitting(true);\n            try {\n                await dispatch(authUser({ values, type: 'signup' }));\n            }\n            catch (error) {\n\n            }\n            setSubmitting(false);\n        },\n        validate: validateSignup\n    })\n\n    React.useEffect(() => {\n        return () => {\n            dispatch(resetMsg())\n        };\n    }, []);\n\n    const { errors, values, handleChange, handleSubmit, isSubmitting } = formik;\n    const { username, password, email, confirmedPassword } = values;\n\n    const makeAlert = React.useCallback(() => {\n        if (message === 'Email sent') {\n            alert(`Confirm email has been sent to your email, please check to verify your account and log in again`);\n            history.push('/home');\n        } else if (message) {\n            alert(message);\n        }\n    }, [message]);\n\n    return (\n        <>\n            <Alert alert={makeAlert} />\n            <Wrapper>\n                <FormContainer onSubmit={handleSubmit}>\n                    <FormTitle>Sign Up</FormTitle>\n                    <form>\n                        <InputField>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                            {errors.username ? <div>{errors.username}</div> : null}\n                        </InputField>\n                        <InputField>\n                            <Label htmlFor=\"email\">Email</Label>\n                            <Input type=\"email\" id=\"email\" name=\"email\" onChange={handleChange} value={email} />\n                            {errors.email ? <div>{errors.email}</div> : null}\n                        </InputField>\n                        <InputField>\n                            <Label htmlFor=\"password\">Password</Label>\n                            <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                            {errors.password ? <div>{errors.password}</div> : null}\n                        </InputField>\n                        <InputField>\n                            <Label htmlFor=\"confirmedPassword\">Confirm Password</Label>\n                            <Input type=\"password\" id=\"confirmedPassword\" name=\"confirmedPassword\" onChange={handleChange} value={confirmedPassword} />\n                            {errors.confirmedPassword ? <div>{errors.confirmedPassword}</div> : null}\n                        </InputField>\n                        <Button disabled={isSubmitting} type=\"submit\">Sign up</Button>\n                    </form>\n                </FormContainer>\n            </Wrapper >\n        </>\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}