{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/auth/SignUp.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\n\nconst SignUp = () => {\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      email: ''\n    },\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      console.log(111);\n      setSubmitting(true);\n\n      const handleSubmit = async () => {\n        try {\n          const resp = await fetch('http://localhost:5000/users', {\n            mode: 'no-cors'\n          });\n          console.log(resp);\n          const result = await resp.json();\n          console.log(result);\n          console.log(333);\n        } catch (error) {\n          console.log(error);\n        }\n\n        setSubmitting(false);\n      };\n\n      handleSubmit();\n    }\n  });\n  const {\n    handleChange,\n    values,\n    handleSubmit,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password,\n    email\n  } = values;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      email: ''\n    },\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      console.log(111);\n      setSubmitting(true);\n\n      const handleSubmit = async () => {\n        try {\n          const resp = await fetch('http://localhost:5000/users', {\n            mode: 'no-cors'\n          });\n          console.log(resp);\n          const result = await resp.json();\n          console.log(result);\n          console.log(333);\n        } catch (error) {\n          console.log(error);\n        }\n\n        setSubmitting(false);\n      };\n\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, props => /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, JSON.stringify(values, null, 2))))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/auth/SignUp.js"],"names":["React","Formik","FormTitle","InputField","Label","Input","Button","FormContainer","Wrapper","SignUp","formik","useFormik","initialValues","username","password","email","onSubmit","values","setSubmitting","resetForm","console","log","handleSubmit","resp","fetch","mode","result","json","error","handleChange","isSubmitting","props","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\n\n\n\n\nconst SignUp = () => {\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n            email: ''\n        },\n        onSubmit: (values, { setSubmitting, resetForm }) => {\n            console.log(111);\n            setSubmitting(true);\n            const handleSubmit = async () => {\n                try {\n                    const resp = await fetch('http://localhost:5000/users', {\n                        mode: 'no-cors'\n                    });\n\n                    console.log(resp);\n                    const result = await resp.json();\n                    console.log(result);\n                    console.log(333);\n                }\n                catch (error) {\n                    console.log(error)\n                }\n                setSubmitting(false);\n            }\n            handleSubmit()\n        }\n    })\n    const { handleChange, values, handleSubmit, isSubmitting } = formik;\n    const { username, password, email } = values;\n\n    return (\n        <Wrapper>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: '',\n                    email: ''\n                }}\n\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                    console.log(111);\n                    setSubmitting(true);\n                    const handleSubmit = async () => {\n                        try {\n                            const resp = await fetch('http://localhost:5000/users', {\n                                mode: 'no-cors'\n                            });\n\n                            console.log(resp);\n                            const result = await resp.json();\n                            console.log(result);\n                            console.log(333);\n                        }\n                        catch (error) {\n                            console.log(error)\n                        }\n                        setSubmitting(false);\n                    }\n                    handleSubmit()\n                }}\n            >\n                {(props) => (\n                    <FormContainer onSubmit={handleSubmit}>\n                        <FormTitle>Sign Up</FormTitle>\n                        <form action=\"#\">\n                            <InputField>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                            </InputField>\n                            <InputField>\n                                <Label htmlFor=\"email\">Email</Label>\n                                <Input type=\"email\" id=\"email\" name=\"email\" onChange={handleChange} value={email} />\n                            </InputField>\n                            <InputField>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                            </InputField>\n                            <Button disabled={isSubmitting} type=\"submit\">Sign up</Button>\n                            <pre>{JSON.stringify(values, null, 2)}</pre>\n                        </form>\n                    </FormContainer>\n                )}\n            </Formik>\n        </Wrapper >\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}