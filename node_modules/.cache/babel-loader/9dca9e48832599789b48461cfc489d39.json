{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { API_HOST } from '../../config/environments';\nconst initialValues = {\n  username: '',\n  password: '',\n  email: ''\n};\n\nconst onSubmit = (values, {\n  setSubmitting,\n  resetForm\n}) => {\n  setSubmitting(true);\n\n  const handleSubmit = async () => {\n    try {\n      const resp = await fetch(API_HOST, {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      console.log(resp);\n      const result = await resp.json();\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleSubmit();\n  setSubmitting(false);\n};\n\nconst validate = values => {\n  const errors = {};\n  const {\n    username,\n    password,\n    email\n  } = values;\n\n  if (!email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!username) {\n    errors.username = 'Required';\n  }\n\n  if (!password) {\n    errors.password = 'Required';\n  }\n\n  return errors;\n};\n\nconst SignUp = () => {\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password,\n    email\n  } = values;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 44\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 44\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, JSON.stringify(values, null, 2)))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/user/SignUp.js"],"names":["React","useFormik","FormTitle","InputField","Label","Input","Button","FormContainer","Wrapper","API_HOST","initialValues","username","password","email","onSubmit","values","setSubmitting","resetForm","handleSubmit","resp","fetch","headers","console","log","result","json","error","validate","errors","test","SignUp","formik","handleChange","handleBlur","isSubmitting","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,SADJ,QAEO,QAFP;AAGA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,MAA9C,EAAsDC,aAAtD,EAAqEC,OAArE,QAAoF,cAApF;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;;AAMA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAAS;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAT,KAA0C;AAEvDD,EAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,QAAME,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CACpBX,QADoB,EACV;AACVY,QAAAA,OAAO,EAAE;AAAE,yCAA+B;AAAjC;AADC,OADU,CAAxB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,YAAMK,MAAM,GAAG,MAAML,IAAI,CAACM,IAAL,EAArB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEH,KATD,CAUA,OAAOE,KAAP,EAAc;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AAEJ,GAfD;;AAgBAR,EAAAA,YAAY;AACZF,EAAAA,aAAa,CAAC,KAAD,CAAb;AACH,CArBD;;AAuBA,MAAMW,QAAQ,GAAIZ,MAAD,IAAY;AACzB,QAAMa,MAAM,GAAG,EAAf;AACA,QAAM;AAAEjB,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAgCE,MAAtC;;AACA,MAAI,CAACF,KAAL,EAAY;AACRe,IAAAA,MAAM,CAACf,KAAP,GAAe,UAAf;AACH,GAFD,MAEO,IAAI,CAAC,4CAA4CgB,IAA5C,CAAiDhB,KAAjD,CAAL,EAA8D;AACjEe,IAAAA,MAAM,CAACf,KAAP,GAAe,uBAAf;AACH;;AAED,MAAI,CAACF,QAAL,EAAe;AACXiB,IAAAA,MAAM,CAACjB,QAAP,GAAkB,UAAlB;AACH;;AAED,MAAI,CAACC,QAAL,EAAe;AACXgB,IAAAA,MAAM,CAAChB,QAAP,GAAkB,UAAlB;AACH;;AAED,SAAOgB,MAAP;AAEH,CAnBD;;AAqBA,MAAME,MAAM,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAG9B,SAAS,CAAC;AACrBS,IAAAA,aADqB;AAErBI,IAAAA,QAFqB;AAGrBa,IAAAA;AAHqB,GAAD,CAAxB;AAMA,QAAM;AAAEC,IAAAA,MAAF;AAAUb,IAAAA,MAAV;AAAkBiB,IAAAA,YAAlB;AAAgCd,IAAAA,YAAhC;AAA8Ce,IAAAA,UAA9C;AAA0DC,IAAAA;AAA1D,MAA2EH,MAAjF;AACA,QAAM;AAAEpB,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAgCE,MAAtC;AAEA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,IAAA,MAAM,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,SAAS,MAAhB;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,EAAE,EAAC,UAAhC;AAA2C,IAAA,IAAI,EAAC,UAAhD;AAA2D,IAAA,QAAQ,EAAEc,YAArE;AAAmF,IAAA,KAAK,EAAErB,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKiB,MAAM,CAACjB,QAAP,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMiB,MAAM,CAACjB,QAAb,CAAlB,GAAiD,IAHtD,CADJ,eAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,IAAI,EAAC,OAApC;AAA4C,IAAA,QAAQ,EAAEqB,YAAtD;AAAoE,IAAA,KAAK,EAAEnB,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKe,MAAM,CAACf,KAAP,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMe,MAAM,CAACf,KAAb,CAAf,GAA2C,IAHhD,CANJ,eAWI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAC,UAA1C;AAAqD,IAAA,QAAQ,EAAEmB,YAA/D;AAA6E,IAAA,KAAK,EAAEpB,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKgB,MAAM,CAAChB,QAAP,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMgB,MAAM,CAAChB,QAAb,CAAlB,GAAiD,IAHtD,CAXJ,eAgBI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEsB,YAAlB;AAAgC,IAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAerB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAN,CAjBJ,CAFJ,CADJ,CADJ;AA2BH,CArCD;;AAuCA,eAAee,MAAf","sourcesContent":["import React from 'react';\nimport {\n    useFormik\n} from 'formik';\nimport { FormTitle, InputField, Label, Input, Button, FormContainer, Wrapper } from './StyledAuth';\nimport { API_HOST } from '../../config/environments';\nconst initialValues = {\n    username: '',\n    password: '',\n    email: ''\n};\n\nconst onSubmit = (values, { setSubmitting, resetForm }) => {\n\n    setSubmitting(true);\n    const handleSubmit = async () => {\n        try {\n            const resp = await fetch(\n                API_HOST, {\n                headers: { 'Access-Control-Allow-Origin': '*' }\n            })\n            console.log(resp);\n            const result = await resp.json();\n            console.log(result);\n\n        }\n        catch (error) {\n            console.log(error)\n        }\n\n    }\n    handleSubmit();\n    setSubmitting(false);\n};\n\nconst validate = (values) => {\n    const errors = {};\n    const { username, password, email } = values;\n    if (!email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!username) {\n        errors.username = 'Required';\n    }\n\n    if (!password) {\n        errors.password = 'Required';\n    }\n\n    return errors;\n\n}\n\nconst SignUp = () => {\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validate\n    })\n\n    const { errors, values, handleChange, handleSubmit, handleBlur, isSubmitting } = formik;\n    const { username, password, email } = values;\n\n    return (\n        <Wrapper>\n            <FormContainer onSubmit={handleSubmit}>\n                <FormTitle>Sign Up</FormTitle>\n                <form action=\"#\">\n                    <InputField>\n                        <Label htmlFor=\"username\">Username</Label>\n                        <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                        {errors.username ? <div>{errors.username}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"email\" id=\"email\" name=\"email\" onChange={handleChange} value={email} />\n                        {errors.email ? <div>{errors.email}</div> : null}\n                    </InputField>\n                    <InputField>\n                        <Label htmlFor=\"password\">Password</Label>\n                        <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                        {errors.password ? <div>{errors.password}</div> : null}\n                    </InputField>\n                    <Button disabled={isSubmitting} type=\"submit\">Sign up</Button>\n                    <pre>{JSON.stringify(values, null, 2)}</pre>\n                </form>\n            </FormContainer>\n\n        </Wrapper >\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}