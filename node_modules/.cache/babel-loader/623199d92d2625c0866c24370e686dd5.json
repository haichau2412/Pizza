{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/cart/Cart.js\";\nimport React from 'react';\nimport { StyledCart, StyledInfo, TableHeading, CheckoutForm } from './StyledCart';\nimport Product from './Product';\nimport OrderCheckout from './OrderCheckout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Alert from '../sharecomponents/Alert';\nimport { useFormik } from 'formik';\nimport { resetMsg } from '../../redux/auth/AuthSlice';\nconst initialValues = {\n  address: ''\n};\n\nconst getAuthenticated = state => {\n  return state.auth.authenticated;\n};\n\nconst getCart = state => state.cart;\n\nfunction Cart() {\n  const isAuthenticated = useSelector(getAuthenticated);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        dispatch(resetMsg()); // await dispatch(authUser({ values, type: 'login' }));\n      } catch (error) {}\n\n      setSubmitting(false);\n    },\n    validate: values => {\n      const errors = {};\n      const {\n        address\n      } = values;\n\n      if (!address) {\n        errors.address = 'Required';\n      }\n\n      return errors;\n    }\n  });\n  const cart = useSelector(getCart);\n  const keys = Object.keys(cart.products);\n  const {\n    items,\n    total\n  } = cart;\n  return /*#__PURE__*/React.createElement(StyledCart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Total\")), keys.map((productId, index) => {\n    return /*#__PURE__*/React.createElement(Product, {\n      key: index,\n      product: cart.products[productId],\n      productId: productId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(OrderCheckout, {\n    data: {\n      items,\n      total\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CheckoutForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Cart;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/cart/Cart.js"],"names":["React","StyledCart","StyledInfo","TableHeading","CheckoutForm","Product","OrderCheckout","useSelector","useDispatch","Alert","useFormik","resetMsg","initialValues","address","getAuthenticated","state","auth","authenticated","getCart","cart","Cart","isAuthenticated","dispatch","formik","onSubmit","values","setSubmitting","resetForm","error","validate","errors","keys","Object","products","items","total","map","productId","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyledCart, StyledInfo, TableHeading, CheckoutForm } from './StyledCart'\nimport Product from './Product';\nimport OrderCheckout from './OrderCheckout'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Alert from '../sharecomponents/Alert';\nimport { useFormik } from 'formik';\nimport { resetMsg } from '../../redux/auth/AuthSlice';\n\nconst initialValues = {\n    address: '',\n};\n\nconst getAuthenticated = (state) => {\n    return state.auth.authenticated;\n};\n\nconst getCart = (state) => state.cart\nfunction Cart() {\n\n    const isAuthenticated = useSelector(getAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n\n            setSubmitting(true);\n            try {\n                dispatch(resetMsg());\n                // await dispatch(authUser({ values, type: 'login' }));\n\n            }\n            catch (error) {\n\n            }\n            setSubmitting(false);\n        },\n        validate: (values) => {\n            const errors = {};\n            const { address } = values;\n\n            if (!address) {\n                errors.address = 'Required';\n            }\n            return errors;\n\n        }\n    })\n\n    const cart = useSelector(getCart);\n    const keys = Object.keys(cart.products);\n    const { items, total } = cart\n\n    return (\n        <StyledCart>\n            <StyledInfo>\n                <TableHeading>\n                    <p>Product</p>\n                    <p>Price</p>\n                    <p>Quantity</p>\n                    <p>Total</p>\n                </TableHeading>\n                {keys.map((productId, index) => {\n                    return <Product key={index} product={cart.products[productId]} productId={productId} />\n                })}\n            </StyledInfo>\n            <OrderCheckout data={{ items, total }} />\n\n            <CheckoutForm>\n                <Alert />\n                <form action=\"#\">\n                    <label htmlFor=\"address\"></label>\n                    <input type=\"text\" id=\"address\" name=\"address\" />\n                </form>\n            </CheckoutForm>\n        </StyledCart>\n    )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}