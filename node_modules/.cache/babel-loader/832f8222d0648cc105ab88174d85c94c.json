{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/cart/Cart.js\";\nimport React from 'react';\nimport { StyledCart, StyledInfo, TableHeading, CheckoutForm } from './StyledCart';\nimport Product from './Product';\nimport OrderCheckout from './OrderCheckout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Alert from '../sharecomponents/Alert';\nimport { useFormik } from 'formik';\nimport { resetMsg } from '../../redux/auth/AuthSlice';\nimport { checkout } from '../../redux/cart/CartSlice';\nconst initialValues = {\n  address: ''\n};\n\nconst getAuthenticated = state => {\n  return state.auth.authenticated;\n};\n\nconst getMsg = state => {\n  return state.cart.msg;\n};\n\nconst getCart = state => state.cart;\n\nfunction Cart() {\n  const [showPopup, setShowPopup] = React.useState('false');\n  const cart = useSelector(getCart);\n  const keys = Object.keys(cart.products);\n  const {\n    items,\n    total\n  } = cart;\n  const message = useSelector(getMsg);\n  const isAuthenticated = useSelector(getAuthenticated);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        await dispatch(checkout({\n          values\n        }));\n      } catch (error) {}\n\n      setSubmitting(false);\n    },\n    validate: values => {\n      const errors = {};\n      const {\n        address\n      } = values;\n\n      if (!address) {\n        errors.address = 'Required';\n      }\n\n      return errors;\n    }\n  });\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    isSubmitting\n  } = formik;\n  const {\n    address\n  } = values; // const makeAlert = React.useCallback(() => {\n  //     if (message) {\n  //         if (isSubmitting === true) {\n  //             alert(message);\n  //         }\n  //     }\n  // }, [message, isSubmitting]);\n\n  return /*#__PURE__*/React.createElement(StyledCart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Total\")), keys.map((productId, index) => {\n    return /*#__PURE__*/React.createElement(Product, {\n      key: index,\n      product: cart.products[productId],\n      productId: productId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 28\n      }\n    });\n  })), /*#__PURE__*/React.createElement(OrderCheckout, {\n    data: {\n      items,\n      total\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Cart;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/cart/Cart.js"],"names":["React","StyledCart","StyledInfo","TableHeading","CheckoutForm","Product","OrderCheckout","useSelector","useDispatch","Alert","useFormik","resetMsg","checkout","initialValues","address","getAuthenticated","state","auth","authenticated","getMsg","cart","msg","getCart","Cart","showPopup","setShowPopup","useState","keys","Object","products","items","total","message","isAuthenticated","dispatch","formik","onSubmit","values","setSubmitting","resetForm","error","validate","errors","handleChange","handleSubmit","isSubmitting","map","productId","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyledCart, StyledInfo, TableHeading, CheckoutForm } from './StyledCart'\nimport Product from './Product';\nimport OrderCheckout from './OrderCheckout'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Alert from '../sharecomponents/Alert';\nimport { useFormik } from 'formik';\nimport { resetMsg } from '../../redux/auth/AuthSlice';\nimport { checkout } from '../../redux/cart/CartSlice'\n\nconst initialValues = {\n    address: '',\n};\n\nconst getAuthenticated = (state) => {\n    return state.auth.authenticated;\n};\n\nconst getMsg = (state) => {\n    return state.cart.msg\n};\n\nconst getCart = (state) => state.cart\n\nfunction Cart() {\n\n    const [showPopup, setShowPopup] = React.useState('false');\n\n    const cart = useSelector(getCart);\n    const keys = Object.keys(cart.products);\n    const { items, total } = cart\n\n    const message = useSelector(getMsg);\n\n    const isAuthenticated = useSelector(getAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n\n            setSubmitting(true);\n            try {\n                await dispatch(checkout({ values }));\n            }\n            catch (error) {\n\n            }\n            setSubmitting(false);\n        },\n        validate: (values) => {\n            const errors = {};\n            const { address } = values;\n\n            if (!address) {\n                errors.address = 'Required';\n            }\n            return errors;\n\n        }\n    });\n    const { errors, values, handleChange, handleSubmit, isSubmitting } = formik;\n    const { address } = values;\n\n    // const makeAlert = React.useCallback(() => {\n\n    //     if (message) {\n    //         if (isSubmitting === true) {\n    //             alert(message);\n    //         }\n    //     }\n    // }, [message, isSubmitting]);\n\n\n    return (\n        <StyledCart>\n            <StyledInfo>\n                <TableHeading>\n                    <p>Product</p>\n                    <p>Price</p>\n                    <p>Quantity</p>\n                    <p>Total</p>\n                </TableHeading>\n                {keys.map((productId, index) => {\n                    return <Product key={index} product={cart.products[productId]} productId={productId} />\n                })}\n            </StyledInfo>\n            <OrderCheckout data={{ items, total }} />\n\n            \n        </StyledCart>\n    )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}