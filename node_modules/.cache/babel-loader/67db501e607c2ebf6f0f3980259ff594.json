{"ast":null,"code":"var _jsxFileName = \"/home/chau1246/Documents/pizza/src/App/components/user/SignIn.js\";\nimport React from 'react';\nimport { FormContainer, FormTitle, InputField, Label, Input, Button, Wrapper } from './StyledAuth';\nimport { useFormik } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authUser, resetMsg } from '../../redux/auth/AuthSlice';\nimport { validateLogin } from './validator';\nimport { history } from '../../service/History';\nimport Alert from '../sharecomponents/Alert';\nconst initialValues = {\n  username: '',\n  password: ''\n};\n\nconst getMsg = state => {\n  return state.auth.msg;\n};\n\nconst getAuthenticated = state => {\n  return state.auth.authenticated;\n};\n\nconst SignIn = () => {\n  const message = useSelector(getMsg);\n  const [alertMsg, setAlertMsg] = React.useState('');\n  const isAuthenticated = useSelector(getAuthenticated);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        dispatch(resetMsg());\n        await dispatch(authUser({\n          values,\n          type: 'login'\n        }));\n      } catch (error) {}\n\n      setSubmitting(false);\n    },\n    validate: validateLogin\n  });\n  React.useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/home');\n    }\n\n    setAlertMsg(message);\n    return () => {\n      dispatch(resetMsg());\n    };\n  }, [message, isAuthenticated]);\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    isSubmitting\n  } = formik;\n  const {\n    username,\n    password\n  } = values;\n  const makeAlert = React.useCallback(() => {\n    console.log(111);\n\n    if (alertMsg) {\n      if (isSubmitting === true) {\n        alert(alertMsg);\n      }\n    }\n  }, [alertMsg, isSubmitting]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    alert: makeAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }), errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 48\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(InputField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 48\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Sign in\")))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/components/user/SignIn.js"],"names":["React","FormContainer","FormTitle","InputField","Label","Input","Button","Wrapper","useFormik","useSelector","useDispatch","authUser","resetMsg","validateLogin","history","Alert","initialValues","username","password","getMsg","state","auth","msg","getAuthenticated","authenticated","SignIn","message","alertMsg","setAlertMsg","useState","isAuthenticated","dispatch","formik","onSubmit","values","setSubmitting","resetForm","type","error","validate","useEffect","push","errors","handleChange","handleSubmit","isSubmitting","makeAlert","useCallback","console","log","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormContainer, FormTitle, InputField, Label, Input, Button, Wrapper } from './StyledAuth';\nimport {\n    useFormik\n} from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authUser, resetMsg } from '../../redux/auth/AuthSlice';\nimport { validateLogin } from './validator';\nimport { history } from '../../service/History';\nimport Alert from '../sharecomponents/Alert';\n\n\nconst initialValues = {\n    username: '',\n    password: ''\n};\n\nconst getMsg = (state) => {\n    return state.auth.msg\n};\n\nconst getAuthenticated = (state) => {\n    return state.auth.authenticated;\n};\n\nconst SignIn = () => {\n\n    const message = useSelector(getMsg);\n\n    const [alertMsg, setAlertMsg] = React.useState('');\n\n    const isAuthenticated = useSelector(getAuthenticated);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: async (values, { setSubmitting, resetForm }) => {\n\n            setSubmitting(true);\n            try {\n                dispatch(resetMsg());\n                await dispatch(authUser({ values, type: 'login' }));\n            }\n            catch (error) {\n\n            }\n            setSubmitting(false);\n        },\n        validate: validateLogin\n    })\n\n    React.useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/home');\n        }\n\n        setAlertMsg(message);\n\n        return () => {\n            dispatch(resetMsg());\n        };\n    }, [message, isAuthenticated]);\n\n    const { errors, values, handleChange, handleSubmit, isSubmitting } = formik;\n    const { username, password } = values;\n\n    const makeAlert = React.useCallback(() => {\n        console.log(111)\n        if (alertMsg) {\n            if (isSubmitting === true) {\n                alert(alertMsg);\n            }\n        }\n    }, [alertMsg, isSubmitting]);\n\n    return (\n        <>\n            <Alert alert={makeAlert}  />\n            <Wrapper>\n                <FormContainer onSubmit={handleSubmit}>\n                    <FormTitle>Sign in</FormTitle>\n                    <form >\n                        <InputField>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input autoFocus type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username} />\n                            {errors.username ? <div>{errors.username}</div> : null}\n                        </InputField>\n                        <InputField>\n                            <Label htmlFor=\"password\">Password</Label>\n                            <Input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                            {errors.password ? <div>{errors.password}</div> : null}\n                        </InputField>\n                        <Button disabled={isSubmitting} type=\"submit\">Sign in</Button>\n                    </form>\n                </FormContainer>\n            </Wrapper>\n        </>\n    )\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}