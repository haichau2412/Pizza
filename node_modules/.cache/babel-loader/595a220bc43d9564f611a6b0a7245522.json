{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport UserServices from '../../service/UserServices';\nexport const authUserbySignup = createAsyncThunk('auth/authUserbySignupStatus', async (info, thunkAPI) => {\n  const data = await UserServices.signup(info);\n  return data;\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    currentUser: {\n      id: 0,\n      username: ''\n    },\n    authenticating: false,\n    authenticated: false,\n    token: '',\n    error: ''\n  },\n  reducers: {\n    request: (state, action) => {\n      state.authenticating = true;\n    },\n    success: (state, action) => {\n      state.currentUser = action.payload.username;\n      state.authenticated = true;\n      state.authenticating = false;\n      state.token = action.payload.tooken;\n    },\n    error: (state, action) => {\n      state.authenticating = false;\n      state.error = action.payload.error;\n    }\n  },\n  extraReducers: {\n    [authUserbySignup.fulfilled]: (state, action) => {\n      console.log(action.payload);\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = authSlice;\nexport const {\n  request,\n  success,\n  error\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/home/chau1246/Documents/pizza/src/App/redux/auth/AuthSlice.js"],"names":["createSlice","createAsyncThunk","UserServices","authUserbySignup","info","thunkAPI","data","signup","authSlice","name","initialState","currentUser","id","username","authenticating","authenticated","token","error","reducers","request","state","action","success","payload","tooken","extraReducers","fulfilled","console","log","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAGA,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC5C,6BAD4C,EAE5C,OAAOG,IAAP,EAAaC,QAAb,KAA0B;AACtB,QAAMC,IAAI,GAAG,MAAMJ,YAAY,CAACK,MAAb,CAAoBH,IAApB,CAAnB;AACA,SAAOE,IAAP;AACH,CAL2C,CAAzC;AAQP,OAAO,MAAME,SAAS,GAAGR,WAAW,CAAC;AACjCS,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,QAAQ,EAAE;AAAnB,KADH;AAEVC,IAAAA,cAAc,EAAE,KAFN;AAGVC,IAAAA,aAAa,EAAE,KAHL;AAIVC,IAAAA,KAAK,EAAE,EAJG;AAKVC,IAAAA,KAAK,EAAE;AALG,GAFmB;AASjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACN,cAAN,GAAuB,IAAvB;AACH,KAHK;AAINQ,IAAAA,OAAO,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACT,WAAN,GAAoBU,MAAM,CAACE,OAAP,CAAeV,QAAnC;AACAO,MAAAA,KAAK,CAACL,aAAN,GAAsB,IAAtB;AACAK,MAAAA,KAAK,CAACN,cAAN,GAAuB,KAAvB;AACAM,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE,OAAP,CAAeC,MAA7B;AACH,KATK;AAUNP,IAAAA,KAAK,EAAE,CAACG,KAAD,EAAQC,MAAR,KAAmB;AACtBD,MAAAA,KAAK,CAACN,cAAN,GAAuB,KAAvB;AACAM,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAAP,CAAeN,KAA7B;AACH;AAbK,GATuB;AAwBjCQ,EAAAA,aAAa,EAAE;AACX,KAACtB,gBAAgB,CAACuB,SAAlB,GAA8B,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7CM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACE,OAAnB;AACH;AAHU;AAxBkB,CAAD,CAA7B;AAgCP,MAAM;AAAEM,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBtB,SAA7B;AAEA,OAAO,MAAM;AAAEW,EAAAA,OAAF;AAAWG,EAAAA,OAAX;AAAoBL,EAAAA;AAApB,IAA8BY,OAApC;AAEP,eAAeC,OAAf","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport UserServices from '../../service/UserServices';\n\n\nexport const authUserbySignup = createAsyncThunk(\n    'auth/authUserbySignupStatus',\n    async (info, thunkAPI) => {\n        const data = await UserServices.signup(info);\n        return data;\n    }\n)\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        currentUser: { id: 0, username: '' },\n        authenticating: false,\n        authenticated: false,\n        token: '',\n        error: ''\n    },\n    reducers: {\n        request: (state, action) => {\n            state.authenticating = true;\n        },\n        success: (state, action) => {\n            state.currentUser = action.payload.username;\n            state.authenticated = true;\n            state.authenticating = false;\n            state.token = action.payload.tooken;\n        },\n        error: (state, action) => {\n            state.authenticating = false;\n            state.error = action.payload.error;\n        }\n    },\n    extraReducers: {\n        [authUserbySignup.fulfilled]: (state, action) => {\n            console.log(action.payload);\n        }\n    }\n});\n\n\nconst { actions, reducer } = authSlice;\n\nexport const { request, success, error } = actions;\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}